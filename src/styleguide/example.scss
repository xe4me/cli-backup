@import "~AbstractStyles";
@import "../../node_modules/@angular/material/core/style/_variables";

/**
 * Mixin that creates a new stacking context.
 * see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
 */
@mixin md-stacking-context() {
  position: relative;

          // Use a transform to create a new stacking context.
  transform: translate3d(0, 0, 0);
}

/**
 * This mixin hides an element visually.
 * That means it's still accessible for screen-readers but not visible in view.
 */
@mixin md-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-transform: none;
  width: 1px;
}

/**
 * Forces an element to grow to fit floated contents; used as as an alternative to
 * `overflow: hidden;` because it doesn't cut off contents.
 */
@mixin md-clearfix {
  &::before, &::after {
    content: '';
    clear: both;
    display: table;
  }
}

/**
 * A mixin, which generates temporary ink ripple on a given component.
 * When $bindToParent is set to true, it will check for the focused class on the same selector as you included
 * that mixin.
 * It is also possible to specify the color palette of the temporary ripple. By default it uses the
 * accent palette for its background.
 */
@mixin md-temporary-ink-ripple($component, $bindToParent: false, $palette: $md-accent) {
  // TODO(mtlin): Replace when ink ripple component is implemented.
  // A placeholder ink ripple, shown when keyboard focused.
  .md-ink-ripple {
    border-radius: 50%;
    opacity: 0;
    height: 48px;
    left: 50%;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    transition: opacity ease 280ms, background-color ease 280ms;
    width: 48px;
  }

  // Fade in when radio focused.
  #{if($bindToParent, '&', '')}.md-#{$component}-focused .md-ink-ripple {
    opacity: 1;
    background-color: md-color($palette, 0.26);
  }

  // TODO(mtlin): This corresponds to disabled focus state, but it's unclear how to enter into
  // this state.
  #{if($bindToParent, '&', '')}.md-#{$component}-disabled .md-ink-ripple {
    background-color: #000;
  }
}


:host {
    display: block;
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}


.demo-container {
    overflow: hidden;
    .demo-toolbar {
        button[md-button] {
            color: rgba(255, 255, 255, 0.6);
            &.active {
                color: rgba(255, 255, 255, 0.9);
            }
        }

    }
}

.layout-content,
.doc-content {
    min-width: 300px;
    margin: 16px;
    box-sizing: border-box;


}

docs-demo {
    display: block;
    margin-top: 16px;
}

.doc-description p {
    margin-top: 0;
}

.demo-container {
    border-radius: 4px;
    margin-bottom: 16px;
    -webkit-transition: 0.02s padding cubic-bezier(0.35, 0, 0.25, 1);
    transition: 0.02s padding cubic-bezier(0.35, 0, 0.25, 1);
    position: relative;
    padding-bottom: 0;
    background-color: $amp-colour-primary-lighter;
}

.demo-source-tabs {
    z-index: 1;
    -webkit-transition: all 0.45s cubic-bezier(0.35, 0, 0.25, 1);
    transition: all 0.45s cubic-bezier(0.35, 0, 0.25, 1);
    height: 448px;
    max-height: 0;
    background: #fff;
    overflow: hidden;
    &.shown {
        max-height: 448px;
    }
}

.demo-source-tabs md-tabs-wrapper {
    background-color: $amp-colour-primary-lighter;;
}

md-tabs.demo-source-tabs [md-tab],
md-tabs.demo-source-tabs .md-header {
    background-color: #444444 !important;
}

.demo-source-tabs.ng-hide {
    min-height: 0;
    height: 0;
}

.demo-source-tabs {
    position: relative;
    width: 100%;
    z-index: 0;
}

.demo-content {
    position: relative;
    overflow: hidden;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
}

.doc-content > * {
    -webkit-box-flex: 1 1 auto;
    -webkit-flex: 1 1 auto;
    -moz-box-flex: 1 1 auto;
    -moz-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
}

.demo-content > * {
    -webkit-box-flex: 1 1 0%;
    -webkit-flex: 1 1 0%;
    -moz-box-flex: 1 1 0%;
    -moz-flex: 1 1 0%;
    -ms-flex: 1 1 0%;
    flex: 1 1 0%;
}

.demo-content > div[layout-fill] {
    min-height: 448px;
}

.demo-source-container {
    display: block;
    height: 400px;
}
